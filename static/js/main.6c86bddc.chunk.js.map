{"version":3,"sources":["components/header.tsx","constant/index.tsx","utils/call-api.js","actions/forecast.tsx","utils/dateUtils.ts","components/search.tsx","components/forecast.tsx","reducers/index.tsx","store/index.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","REQUEST_FORECAST","SUCCESS_FORECAST","FAILED_FORECAST","callApi","endpoint","method","configaxios","url","headers","Accept","Promise","resolve","reject","axios","then","res","data","catch","error","response","message","mapStateToProps","state","foreCastData","foreCast","successForecast","forecastFiveDays","fiveDays","days","i","push","Date","now","getDay","getFiveDays","selectedDayForecast","list","slice","forEach","index","dayName","city","day","temp","temp_max","main","temp_min","weather","wind","type","failedForecast","err","mapDispatchToProps","dispatch","getForecastData","searchType","searchValue","a","process","upDateForecastData","connect","props","useState","search","setSearch","selectSearchByCategory","setSelectSearchByCategory","setError","handleError","setTimeout","style","width","onChange","e","target","value","placeholder","onClick","id","tempToday","setTempTody","tempType","setTempType","useEffect","tempvalue","Math","trunc","getIcon","iconCode","selectedDay","fetching","fetched","name","country","src","icon","alt","pressure","humidity","speed","map","info","handleSelectedDayForeCast","allreducers","combineReducers","action","store","createStore","App","Store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c86bddc.chunk.js","sourcesContent":["const Header = () => {\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"header\">\r\n                        WEATHER FORECAST (5 DAYS)\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport { Header }","export const REQUEST_FORECAST = \"REQUEST_FORECAST\";\r\nexport const SUCCESS_FORECAST = \"SUCCESS_FORECAST\";\r\nexport const FAILED_FORECAST = \"FAILED_FORECAST\";","import axios from \"axios\"\r\nexport const callApi = (endpoint, method) => {\r\n    const configaxios = {\r\n        method,\r\n        url: endpoint,\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios(configaxios).then((res) => {\r\n            resolve(res?.data);\r\n        }).catch((error) => {\r\n            reject(error?.response?.data?.message);\r\n        })\r\n    })\r\n}","import { REQUEST_FORECAST, SUCCESS_FORECAST, FAILED_FORECAST } from \"../constant\";\r\nimport { callApi } from \"../utils/call-api\";\r\nimport { getFiveDays } from '../utils/dateUtils';\r\n\r\nexport const mapStateToProps = (state: any) => {\r\n    return { foreCastData: state.foreCast };\r\n};\r\n\r\nlet reqForecast = () => {\r\n    return {\r\n        type: REQUEST_FORECAST,\r\n    };\r\n};\r\n\r\nlet successForecast = (data: any) => {\r\n\r\n    const forecastFiveDays: any = [];\r\n    const fiveDays = getFiveDays();\r\n    let selectedDayForecast = {}\r\n\r\n    data.list.slice(5).forEach((i: any, index: number) => {\r\n        let dayName = fiveDays[index]\r\n        if (dayName) {\r\n            forecastFiveDays.push({\r\n                city: data.city,\r\n                day: dayName,\r\n                temp: {\r\n                    temp_max: i.main.temp_max,\r\n                    temp_min: i.main.temp_min,\r\n                },\r\n                weather: i.weather[0],\r\n                main: i.main,\r\n                wind: i.wind,\r\n            });\r\n\r\n            if (!index) {\r\n                selectedDayForecast = {\r\n                    city: data.city,\r\n                    day: dayName,\r\n                    temp: {\r\n                        temp_max: i.main.temp_max,\r\n                        temp_min: i.main.temp_min,\r\n                    },\r\n                    weather: i.weather[0],\r\n                    main: i.main,\r\n                    wind: i.wind,\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n    return {\r\n        type: SUCCESS_FORECAST,\r\n        data: { forecastFiveDays, selectedDayForecast },\r\n    };\r\n};\r\n\r\nlet failedForecast = (err: any) => {\r\n    return {\r\n        type: FAILED_FORECAST,\r\n        error: err,\r\n    };\r\n};\r\n\r\nexport const mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        getForecastData: async (searchType: string, searchValue: string) => {\r\n            try {\r\n\r\n                dispatch(reqForecast());\r\n                let url = searchType === \"cityName\" ? `http://api.openweathermap.org/data/2.5/forecast?q=${searchValue}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}` : searchType === \"zipCode\" ? `http://api.openweathermap.org/data/2.5/forecast?id=${searchValue}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}` : \"\"\r\n\r\n                callApi(url, 'get').then((res) => {\r\n                    dispatch(successForecast(res));\r\n                }).catch((error) => {\r\n                    dispatch(failedForecast(error));\r\n                })\r\n\r\n            } catch (error) {\r\n                dispatch(failedForecast(error));\r\n            }\r\n        },\r\n        upDateForecastData: async (data: any) => {\r\n            dispatch({\r\n                type: SUCCESS_FORECAST,\r\n                data,\r\n            });\r\n        }\r\n    };\r\n};\r\n","export function getFiveDays(): string[] {\r\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  const fiveDays = [];\r\n  for (let i = 0; i < 5; i++) {\r\n    fiveDays.push(days[new Date(Date.now() + (i + 0) * 24 * 60 * 60 * 1000).getDay()]);\r\n  }\r\n  return fiveDays;\r\n}\r\n","import { useState } from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../actions/forecast\";\r\nimport { foreCastpropsInterface } from \"../types/forecast\"\r\nconst Search = (props: foreCastpropsInterface) => {\r\n\r\n    const [search, setSearch] = useState<string | number>(\"\")\r\n    const [selectSearchByCategory, setSelectSearchByCategory] = useState<string>(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n\r\n    const handleSearchEvent = (searchValue: string | number) => {\r\n        setSearch(searchValue)\r\n    }\r\n\r\n    const handleSearchByCategory = (searchType: string) => {\r\n        setSelectSearchByCategory(searchType)\r\n    }\r\n    // method to handle error\r\n    const handleError = (error: string) => {\r\n        setError(error)\r\n        setTimeout(() => {\r\n            setError(\"\")\r\n        }, 3000)\r\n    }\r\n    const getSearchResult = () => {\r\n        if (!selectSearchByCategory) {\r\n            handleError(\"Please select search type\")\r\n        }\r\n        else if (!search) {\r\n            handleError(\"Please fill search box\")\r\n        }\r\n        else {\r\n            props.getForecastData(selectSearchByCategory, search)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"input-group mb-3 searchDropDown\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <select className=\"form-control select2bs4\" style={{ width: 150 }} onChange={(e) => handleSearchByCategory(e.target.value)}>\r\n                                <option value=\"\">Search by</option>\r\n                                <option value=\"cityName\">City Name</option>\r\n                                <option value=\"cityId\">City Id</option>\r\n                                <option value=\"zipCode\">Zip Code</option>\r\n                            </select>\r\n                        </div>\r\n                        <input type=\"text\" value={search} className=\"form-control\" placeholder=\"Search term..\" aria-label=\"search\" aria-describedby=\"basic-addon2\" onChange={(e) =>\r\n                            handleSearchEvent(e.target.value)\r\n                        } />\r\n                        <div className=\"input-group-append appendBtn\" onClick={() => getSearchResult()}>\r\n                            <span className=\"input-group-text\" id=\"basic-addon2\"> <i className=\"bi-search\"></i></span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <p className=\"errorValidaiton\">{error}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)","import { useEffect, useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../actions/forecast\";\r\nimport { foreCastpropsInterface } from \"../types/forecast\"\r\nimport { selectedDayForecast } from \"../types/forecast\"\r\n\r\nconst Forecast = (props: foreCastpropsInterface) => {\r\n    const [tempToday, setTempTody] = useState<number>(0);\r\n    const [tempType, setTempType] = useState<string>(\"celius\");\r\n\r\n    // if temp degree type change or day change then update temp according to it.\r\n    useEffect(() => {\r\n        let tempvalue = props?.foreCastData?.foreCast?.selectedDayForecast?.temp?.temp_max;\r\n        if (tempType === \"celius\") {\r\n            setTempTody(Math.trunc((tempvalue)))\r\n        } else {\r\n            setTempTody(Math.trunc((tempvalue * 1.8) + 32))\r\n        }\r\n\r\n    }, [tempType, props?.foreCastData?.foreCast?.selectedDayForecast?.temp?.temp_max])\r\n\r\n    // Method to get icon according to weather condation.\r\n    const getIcon = (iconCode: string) => {\r\n        let icon = `https://openweathermap.org/img/w/${iconCode}.png`\r\n        return icon;\r\n    }\r\n\r\n    const handleSelectedDayForeCast = (info: selectedDayForecast) => {\r\n        props.foreCastData.foreCast.selectedDayForecast = info;\r\n        props.upDateForecastData(props.foreCastData.foreCast);\r\n    }\r\n\r\n    let selectedDay = props?.foreCastData?.foreCast?.selectedDayForecast;\r\n    return (\r\n        <>\r\n\r\n            {props?.foreCastData?.fetching ? <p className=\"Loader\">Loading...</p> : props?.foreCastData?.error ? <p className=\"errorRespone\">{props?.foreCastData?.error}</p> : props?.foreCastData?.fetched ? <>\r\n\r\n                <div className=\"row foreCastRow\">\r\n                    <div className=\"col-md-12\">\r\n                        <span className=\"cityTitle\">{selectedDay?.city?.name},{selectedDay?.city?.country}</span>\r\n                        <p className=\"daystatus\">{selectedDay?.day}</p>\r\n                        <p className=\"weatherStatus\">{selectedDay?.weather?.main}</p>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row foreCastSubTitleinfo\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"weathericonTemp\">\r\n                            <img src={getIcon(selectedDay?.weather?.icon)} alt=\"weatherstatus\" />\r\n                            <span>{tempToday}</span>&nbsp;<span className=\"degreeTemp\"><sup><span className=\"celiusDegree\" onClick={() => setTempType(\"celius\")}>&#8451;</span>|<span className=\"farhentDegree\" onClick={() => setTempType(\"farhent\")}>&#8457;</span></sup></span>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <p>Pressure:&nbsp;{selectedDay?.main?.pressure}&nbsp;hPa</p>\r\n                        <p className=\"preHumspeedInfo\">Humidity:&nbsp;{selectedDay?.main?.humidity}&nbsp;%</p>\r\n                        <p className=\"preHumspeedInfo\">Wind speed:&nbsp;{selectedDay?.wind?.speed}&nbsp;m/s</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row foreCastDaysRow\">\r\n                    {props?.foreCastData?.foreCast?.forecastFiveDays.map((info: any, index: number) => {\r\n                        return <div key={index} className={info.day == selectedDay?.day ? \"cardDayWithborder\" : \"cardDay\"} onClick={() => handleSelectedDayForeCast(info)} >\r\n                            <p>{info.day}</p>\r\n                            <img src={getIcon(info.weather.icon)} alt=\"weatherstatus\" /><br />\r\n                            <span>{Math.trunc(info.temp.temp_max)}&nbsp;<span>&#176;</span></span> <span>{Math.trunc(info.temp.temp_min)}&nbsp;<span>&#176;</span></span>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </> : \"\"}\r\n        </>\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Forecast)","import { combineReducers } from \"redux\";\r\nimport { REQUEST_FORECAST, SUCCESS_FORECAST, FAILED_FORECAST } from \"../constant\";\r\nimport {foreCastActionInterface} from \"../types/forecast\"\r\nvar foreCastReducer = (\r\n  state = {\r\n    fetching: false,\r\n    fetched: false,\r\n    error: false,\r\n    foreCast: {forecastFiveDays:[],selectedDayForecast:{}},\r\n  },\r\n  action:foreCastActionInterface\r\n) => {\r\n  switch (action.type) {\r\n    \r\n    case REQUEST_FORECAST:\r\n      return { ...state, fetching: true };\r\n      break;\r\n    case SUCCESS_FORECAST:\r\n      return {\r\n        ...state,\r\n        error:false,\r\n        fetching: false,\r\n        fetched: true,\r\n        foreCast: action.data,\r\n      };\r\n    case FAILED_FORECAST:\r\n      return { ...state, fetching: false, fetched: false, error: action.error };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst allreducers = combineReducers({\r\n  foreCast: foreCastReducer,\r\n});\r\n\r\nexport default allreducers;\r\n","\r\nimport { createStore } from \"redux\";\r\nimport allreducers from \"../reducers\";\r\nconst store = createStore(allreducers);\r\n\r\nexport default store;\r\n","import './App.css';\nimport { Header } from './components/header';\nimport Search from './components/search';\nimport Forecast from \"./components/forecast\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\n\nfunction App() {\n\n  return (\n    <Provider store={Store}>\n      <div className=\"\">\n        <Header />\n        <Search />\n        <Forecast />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}